version: "3.9"
services:
  api:
    build: ./api
    container_name: sado_api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATA_ROOT=/app/data
      - VECTOR_HOST=vectorstore
      - VECTOR_PORT=9000
    volumes:
      - ./data:/app/data
    depends_on:
      vectorstore:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys;sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8000/healthz', timeout=5).status==200 else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  dashboard:
    build: ./dashboard
    container_name: sado_dashboard
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data:ro
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys;sys.exit(0 if urllib.request.urlopen('http://127.0.0.1:8080/healthz', timeout=5).status==200 else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  scheduler:
    build: ./scheduler
    container_name: sado_scheduler
    restart: unless-stopped
    environment:
      - API_BASE=http://api:8000
      - DATA_ROOT=/app/data
      - INDEX_INTERVAL_MINUTES=60
    volumes:
      - ./data:/app/data
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import os,sys,time;sys.exit(0 if os.path.exists('/tmp/scheduler_heartbeat') and time.time()-os.path.getmtime('/tmp/scheduler_heartbeat')<120 else 1)"]
      interval: 60s
      timeout: 10s
      retries: 2
      start_period: 30s

  vectorstore:
    build:
      context: ./vectorstore
    container_name: sado_vectorstore
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - ./data:/app/data
    profiles: ["faiss"]
    healthcheck:
      test: ["CMD", "python", "-c", "import socket,sys; s=socket.create_connection(('127.0.0.1',9000),5); s.close(); sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes: {}
